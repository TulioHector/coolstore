apiVersion: v1
kind: Template
labels:
  application: coolstore-ui
metadata:
  name: coolstore-ui
objects:
- apiVersion: v1
  data:
    api.endpoint: ${COOLSTORE_GW_URL}
  kind: ConfigMap
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: app-config  
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    postCommit: {}
    resources: {}
    source:
      contextDir: ${GIT_DIR}
      git:
        uri: ${GIT_REPO}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: npm_config_registry
          value: ${NPM_MIRROR}
        from:
          kind: ImageStreamTag
          name: nodejs:6
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: ${BUILD_SECRET}
      type: GitHub
    - generic:
        secret: ${BUILD_SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      application: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
        labels:
          application: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${APPLICATION_NAME}:latest
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
            - name: COOLSTORE_GW_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: api.endpoint
                  name: app-config
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      application: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${COOLSTORE_UI_HOSTNAME}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}

parameters:
- description: Application name
  name: APPLICATION_NAME
  required: true
  value: coolstore-ui
- description: Build hook secret
  name: BUILD_SECRET
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true
- description: Npm mirror URL
  name: NPM_MIRROR
  required: false
  value: http://services.lab.example.com:8081/nexus/content/groups/nodejs
- description: Git repository URL
  name: GIT_REPO
  required: true
  value: http://services.lab.example.com/coolstore
- description: Git repository context dir
  name: GIT_DIR
  required: false
  value: coolstore-ui
- description: Coolstore API endpoint
  name: COOLSTORE_GW_URL
  required: true
  value: http://coolstore-gateway.apps.lab.example.com/api  
- description: Coolstore Web UI hostname
  name: COOLSTORE_UI_HOSTNAME
  required: true
  value: coolstore.apps.lab.example.com

